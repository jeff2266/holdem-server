{"version":3,"sources":["components/Lobby/PlayersTable.js","components/Lobby/UserPwdForm.js","components/Lobby/LoginScreen.js","components/Game/Card.js","components/Game/PlayerStatus.js","components/Game/PlayerContainer.js","components/Game/Dealer.js","components/Game/Table.js","components/useAudio.js","components/Game/ActionForm.js","components/Game/Footer.js","components/Game/GameScreen.js","App.js","index.js"],"names":["Table","styled","table","PlayersTable","players","paddedPlayers","i","length","push","map","a","key","Form","form","Button","button","UserPwdForm","playerCt","hasJoined","isFirstPlayer","socketHandle","emitJoin","emitPlay","onSubmit","e","preventDefault","htmlFor","id","placeholder","type","disabled","onClick","usernameElement","document","getElementById","passwordElement","value","LoginScreenDiv","div","LoginScreen","ImageContainerDiv","Card","card","isUp","suit","style","background","ref","el","setProperty","PlayerStatusDiv","PlayerStatusTurnDiv","PlayerStatus","name","balance","blind","isTurn","PlayerContainerDiv","HandDiv","PlayerContainer","playerState","undefined","pocket","animationIn","animationInDuration","isVisible","cardsUp","animationOut","animationOutDuration","DealerContainer","DealerImageContainer","DealerPrompt","Dealer","message","src","alt","TableContainer","TopBottomBets","BetsAndWindowContainer","LeftRightBets","Bet","BetTurn","Window","window","bets","v","useAudio","url","useState","Audio","audio","playing","setPlaying","pause","play","finally","ActionFormContainer","RaiseSelect","RaiseAmount","RaiseUpDown","ActionButton","ActionForm","toCall","minBet","emitAction","Math","min","raiseAmount","setRaiseAmount","useEffect","max","Footer","myState","socket","GameContainer","PlayerRow","DealerTableRow","GameScreen","guiState","myName","console","log","playerStates","find","x","bet","App","setPlayers","setIsFirstPlayer","isPlay","setIsPlay","setGuiState","socketIOClient","on","newPlayers","slice","isFirst","newGuiState","disconnect","className","amount","emit","password","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d740be20.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst PlayersTable = ({ players }) => {\r\n\r\n    let paddedPlayers = [...players]\r\n    for (let i = players.length; i < 8; i++) {\r\n        paddedPlayers.push('')\r\n    }\r\n\r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                <tr><th>#</th><th>Player Name</th></tr>\r\n                {\r\n                    paddedPlayers.map((a, i) => (\r\n                        <tr key={i}>\r\n                            <td>{i + 1}</td><td>{a}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst Table = styled.table`\r\n    border: 2px solid rgba(233, 192, 154, 0.4);\r\n    border-radius: 4px;\r\n    background: #333;\r\n    padding: 4px;\r\n    text-align: left;\r\n    tbody {\r\n        tr:nth-of-type(even) {\r\n            background-color: #282828;\r\n        }\r\n    }\r\n`\r\n\r\nexport default PlayersTable","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst UserPwdForm = ({ playerCt, hasJoined, isFirstPlayer, socketHandle: { emitJoin, emitPlay } }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={e => {\r\n                e.preventDefault()\r\n            }}>\r\n                <div>\r\n                    <label htmlFor=\"username\" >Username:</label>\r\n                    <input id=\"username\" placeholder=\"choose a name...\"></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\" >Password:</label>\r\n                    <input id=\"password\" type=\"password\" placeholder=\"enter password...\" ></input>\r\n                </div>\r\n\r\n                {/* TODO: Validate username (check not empty) */}\r\n                <Button id=\"join-button\" disabled={hasJoined} onClick={(e) => {\r\n                    e.preventDefault()\r\n                    const usernameElement = document.getElementById('username')\r\n                    const passwordElement = document.getElementById('password')\r\n                    emitJoin(usernameElement.value, passwordElement.value)\r\n                }}>Join</Button>\r\n                {\r\n                    isFirstPlayer ?\r\n                        (playerCt > 1) ?\r\n                            <Button onClick={(e) => {\r\n                                e.preventDefault()\r\n                                emitPlay()\r\n                            }}>Play!</Button>\r\n                            : null\r\n                        : null\r\n                }\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Form = styled.form`\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr 1fr 1fr;\r\n    padding: 0px 8px;\r\n    label {\r\n        float: left;\r\n    }\r\n    input {\r\n        float: right;\r\n        text-align: right;\r\n    }\r\n    * {\r\n        margin: 1px;\r\n    }\r\n`\r\n\r\nconst Button = styled.button`\r\n    font-size: medium;\r\n    font-weight: 600;\r\n    border-style: double;\r\n    border-radius: 4px;\r\n    border-color: rgba(233, 192, 154, 0.4);\r\n    background-color: #2d492e;\r\n    color: #d3c9b0;\r\n    &:hover {\r\n        background-color: #1d391e;\r\n    }\r\n    &:disabled {\r\n        background-color: #49654a\r\n    }\r\n`\r\n\r\nexport default UserPwdForm","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport PlayersTable from './PlayersTable'\r\nimport UserPwdForm from './UserPwdForm'\r\n\r\nconst LoginScreen = ({ players, hasJoined, isFirstPlayer, socketHandle }) => {\r\n\r\n    return (\r\n        <LoginScreenDiv>\r\n            <h1>♦ ♣ Texas Hold'em ♥ ♠</h1>\r\n            <br />\r\n            <PlayersTable players={players} />\r\n            <br />\r\n            <UserPwdForm\r\n                playerCt={players.length}\r\n                hasJoined={hasJoined}\r\n                isFirstPlayer={isFirstPlayer}\r\n                socketHandle={socketHandle} />\r\n        </LoginScreenDiv>\r\n    )\r\n}\r\n\r\nconst LoginScreenDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    position: absolute;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n    background-color: #242424;\r\n    padding: 32px;\r\n    border-style: double;\r\n    border-radius: 4px;\r\n    border-color: rgba(233, 192, 154, 0.4);\r\n    left: 50%;\r\n    top: 50%;\r\n`\r\n\r\nexport default LoginScreen","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Card = ({ card, isUp }) => {\r\n    return (\r\n        <>\r\n            {\r\n                isUp ?\r\n                    (card.suit === '♠' || card.suit === '♣') ?\r\n                        < ImageContainerDiv style={{ background: \"url('images/card_front.png') no-repeat center\" }} ref={(el) => { if (el) el.style.setProperty('color', '#262626', 'important') }}>\r\n                            <p>{card.value}</p>\r\n                            <p>{card.suit}</p>\r\n                        </ImageContainerDiv>\r\n                        : < ImageContainerDiv style={{ background: \"url('images/card_front.png') no-repeat center\" }} ref={(el) => { if (el) el.style.setProperty('color', '#990902', 'important') }}>\r\n                            <p>{card.value}</p>\r\n                            <p>{card.suit}</p>\r\n                        </ImageContainerDiv>\r\n                    : <ImageContainerDiv style={{ background: \"url('images/card_back.png') no-repeat center\" }} />\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst ImageContainerDiv = styled.div`\r\n    width: 83px;\r\n    height: 119px;\r\n    margin: 2px;\r\n    p {\r\n        font-size: 1.25em;\r\n        font-weight: 600;\r\n        margin: 0px 6px;\r\n    }\r\n`\r\n\r\nexport default Card","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst PlayerStatus = ({ name, balance, blind, isTurn }) => {\r\n\r\n    return (\r\n        <>{\r\n            (name) ?\r\n                (isTurn) ?\r\n                    <PlayerStatusTurnDiv>\r\n                        <div>{name}</div>\r\n                        <div>${balance}</div>\r\n                        <div>{(blind) ? [...blind] : null}</div>\r\n                    </PlayerStatusTurnDiv>\r\n                    : <PlayerStatusDiv>\r\n                        <div>{name}</div>\r\n                        <div>${balance}</div>\r\n                        <div>{(blind) ? [...blind] : null}</div>\r\n                    </PlayerStatusDiv>\r\n                : <PlayerStatusDiv>\r\n                    <div>--</div>\r\n                    <div>$--</div>\r\n                    <div></div>\r\n                </PlayerStatusDiv>\r\n        }</>\r\n    )\r\n\r\n}\r\n\r\nconst PlayerStatusDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 3fr 2fr 1fr;\r\n    text-align: center;\r\n    align-content: center;\r\n    border: 4px solid rgba(233, 192, 154, 0.8);\r\n    border-radius: 8px;\r\n    background-color: rgba(50, 50, 50, .8);\r\n    margin: 12px;\r\n`\r\n\r\nconst PlayerStatusTurnDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 3fr 2fr 1fr;\r\n    text-align: center;\r\n    align-content: center;\r\n    border: 4px solid rgba(225, 100, 50, 0.8);\r\n    border-radius: 8px;\r\n    background-color: rgba(50, 50, 50, .8);\r\n    margin: 12px;\r\n`\r\n\r\nexport default PlayerStatus","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Animated } from 'react-animated-css'\r\n\r\nimport Card from './Card'\r\nimport PlayerStatus from './PlayerStatus'\r\n\r\nconst PlayerContainer = ({ playerState }) => {\r\n\r\n    return (\r\n        <>{\r\n            (playerState !== undefined && playerState !== null) ?\r\n                <PlayerContainerDiv>\r\n                    <HandDiv>\r\n                        {\r\n                            (playerState.pocket[0] !== undefined) ?\r\n                                <Animated animationIn='fadeInLeft' animationInDuration={250} isVisible={true}>\r\n                                    <Card\r\n                                        card={{ suit: playerState.pocket[0].suit, value: playerState.pocket[0].value }}\r\n                                        isUp={playerState.cardsUp} />\r\n                                </Animated>\r\n                                : <Animated animationOut='fadeOut' animationOutDuration={0} isVisible={false}>\r\n                                    < Card\r\n                                        card={{ suit: 'x', value: 'x' }}\r\n                                        isUp={playerState.cardsUp}\r\n                                        isVisible={false} />\r\n                                </Animated>\r\n                        }\r\n                        {\r\n                            (playerState.pocket[1] !== undefined) ?\r\n                                <Animated animationIn='fadeInLeft' animationInDuration={250} isVisible={true}>\r\n                                    <Card\r\n                                        card={{ suit: playerState.pocket[1].suit, value: playerState.pocket[1].value }}\r\n                                        isUp={playerState.cardsUp} />\r\n                                </Animated>\r\n                                : <Animated animationOut='fadeOut' animationOutDuration={0} isVisible={false}>\r\n                                    < Card\r\n                                        card={{ suit: 'x', value: 'x' }}\r\n                                        isUp={playerState.cardsUp}\r\n                                        isVisible={false} />\r\n                                </Animated>\r\n                        }\r\n                    </HandDiv>\r\n                    <PlayerStatus name={playerState.name} balance={playerState.balance} blind={playerState.blind} isTurn={playerState.isTurn} />\r\n                </PlayerContainerDiv>\r\n                : <PlayerContainerDiv>\r\n                    <HandDiv />\r\n                    <PlayerStatus />\r\n                </PlayerContainerDiv>\r\n        }</>\r\n    )\r\n\r\n}\r\n\r\nconst PlayerContainerDiv = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 3fr 1fr;\r\n    column-gap: 5%;\r\n`\r\nconst HandDiv = styled.div`    \r\n    display        : flex;\r\n    align-items    : center;\r\n    justify-content: space-evenly;\r\n    img {\r\n        margin: 4px;\r\n    }\r\n`\r\n\r\nexport default PlayerContainer","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Dealer = ({ message }) => {\r\n\r\n    return (\r\n        <DealerContainer>\r\n            <DealerImageContainer>\r\n                <img src='images/dealer.png' alt='dealer.png' />\r\n            </DealerImageContainer>\r\n            {\r\n                (message !== undefined) ? <DealerPrompt>{message}</DealerPrompt>\r\n                    : <DealerPrompt />\r\n            }\r\n        </DealerContainer>\r\n    )\r\n}\r\n\r\nconst DealerContainer = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 3fr, 2fr;\r\n    align-items: stretch;\r\n    justify-content: stretch;\r\n`\r\n\r\nconst DealerImageContainer = styled.div`\r\n    align-self: end;\r\n    margin: 4px;\r\n    img {\r\n        display: block;\r\n        margin: auto;\r\n        max-width : 100%;\r\n        max-height: 100%;\r\n    }\r\n`\r\n\r\nconst DealerPrompt = styled.div`\r\n    padding: 8px;\r\n    border: 4px solid rgba(233, 192, 154, 0.8);\r\n    border-radius: 8px;\r\n    background-color: rgba(50, 50, 50, .8);\r\n    text-align: center;\r\n`\r\n\r\nexport default Dealer","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport Card from './Card'\r\n\r\nconst Table = ({ window, bets, isTurn }) => {\r\n\r\n    return (\r\n        <TableContainer>\r\n            <TopBottomBets>\r\n                {\r\n                    (isTurn[1]) ?\r\n                        <BetTurn id='player-bet-1'><div>$</div> {\r\n                            (bets[1] === undefined) ? <div>--</div> : <div>{bets[1]}</div>\r\n                        } </BetTurn>\r\n                        : <Bet id='player-bet-1'><div>$</div> {\r\n                            (bets[1] === undefined) ? <div>--</div> : <div>{bets[1]}</div>\r\n                        } </Bet>\r\n                }\r\n                {\r\n                    (isTurn[2]) ?\r\n                        <BetTurn id='player-bet-2'><div>$</div> {\r\n                            (bets[2] === undefined) ? <div>--</div> : <div>{bets[2]}</div>\r\n                        } </BetTurn>\r\n                        : <Bet id='player-bet-2'><div>$</div> {\r\n                            (bets[2] === undefined) ? <div>--</div> : <div>{bets[2]}</div>\r\n                        } </Bet>\r\n                }\r\n            </TopBottomBets>\r\n\r\n            <BetsAndWindowContainer>\r\n\r\n                {/* Empty div for spacing */}\r\n                <div></div>\r\n\r\n                <LeftRightBets>\r\n                    {\r\n                        (isTurn[0]) ?\r\n                            <BetTurn id='player-bet-0'><div>$</div> {\r\n                                (bets[0] === undefined) ? <div>--</div> : <div>{bets[0]}</div>\r\n                            } </BetTurn>\r\n                            : <Bet id='player-bet-0'><div>$</div> {\r\n                                (bets[0] === undefined) ? <div>--</div> : <div>{bets[0]}</div>\r\n                            } </Bet>\r\n                    }\r\n                    {\r\n                        (isTurn[7]) ?\r\n                            <BetTurn id='player-bet-7'><div>$</div> {\r\n                                (bets[7] === undefined) ? <div>--</div> : <div>{bets[7]}</div>\r\n                            } </BetTurn>\r\n                            : <Bet id='player-bet-7'><div>$</div> {\r\n                                (bets[7] === undefined) ? <div>--</div> : <div>{bets[7]}</div>\r\n                            } </Bet>\r\n                    }\r\n                </LeftRightBets>\r\n                <Window>\r\n                    {\r\n                        (window !== undefined) ?\r\n                            window.map(v => <Card card={{ suit: v.suit, value: v.value }} isUp={true} />)\r\n                            : <div />\r\n                    }\r\n                </Window>\r\n                <LeftRightBets>\r\n                    {\r\n                        (isTurn[3]) ?\r\n                            <BetTurn id='player-bet-3'><div>$</div> {\r\n                                (bets[3] === undefined) ? <div>--</div> : <div>{bets[3]}</div>\r\n                            } </BetTurn>\r\n                            : <Bet id='player-bet-3'><div>$</div> {\r\n                                (bets[3] === undefined) ? <div>--</div> : <div>{bets[3]}</div>\r\n                            } </Bet>\r\n                    }\r\n                    {\r\n                        (isTurn[4]) ?\r\n                            <BetTurn id='player-bet-4'><div>$</div> {\r\n                                (bets[4] === undefined) ? <div>--</div> : <div>{bets[4]}</div>\r\n                            } </BetTurn>\r\n                            : <Bet id='player-bet-4'><div>$</div> {\r\n                                (bets[4] === undefined) ? <div>--</div> : <div>{bets[4]}</div>\r\n                            } </Bet>\r\n                    }\r\n                </LeftRightBets>\r\n\r\n                {/* Empty div for spacing */}\r\n                <div></div>\r\n            </BetsAndWindowContainer>\r\n\r\n            <TopBottomBets>\r\n                {\r\n                    (isTurn[6]) ?\r\n                        <BetTurn id='player-bet-6'><div>$</div> {\r\n                            (bets[6] === undefined) ? <div>--</div> : <div>{bets[6]}</div>\r\n                        } </BetTurn>\r\n                        : <Bet id='player-bet-6'><div>$</div> {\r\n                            (bets[6] === undefined) ? <div>--</div> : <div>{bets[6]}</div>\r\n                        } </Bet>\r\n                }\r\n                {\r\n                    (isTurn[5]) ?\r\n                        <BetTurn id='player-bet-5'><div>$</div> {\r\n                            (bets[5] === undefined) ? <div>--</div> : <div>{bets[5]}</div>\r\n                        } </BetTurn>\r\n                        : <Bet id='player-bet-5'><div>$</div> {\r\n                            (bets[5] === undefined) ? <div>--</div> : <div>{bets[5]}</div>\r\n                        } </Bet>\r\n                }\r\n            </TopBottomBets>\r\n        </TableContainer>\r\n    )\r\n\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 1fr 2fr 1fr;    \r\n    background: url(../images/table.png) no-repeat center !important;\r\n    background-size: contain !important;\r\n    background-position: center;\r\n`\r\n\r\nconst TopBottomBets = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n`\r\n\r\nconst BetsAndWindowContainer = styled.div`\r\n    display: grid;    \r\n    grid-template-columns: 1fr 3fr 4fr 3fr 1fr;\r\n`\r\n\r\nconst LeftRightBets = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n`\r\n\r\nconst Bet = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr;\r\n    padding: 6px 10px;\r\n    border: 4px solid rgba(233, 192, 154, 0.8);\r\n    border-radius: 8px;\r\n    background-color: rgba(50, 50, 50, .8);\r\n    text-align: center;\r\n`\r\n\r\nconst BetTurn = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr;\r\n    padding: 6px 10px;\r\n    border: 4px solid rgba(225, 100, 50, 0.8);\r\n    border-radius: 8px;\r\n    background-color: rgba(50, 50, 50, .8);\r\n    text-align: center;\r\n`\r\n\r\nconst Window = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    img {\r\n        margin: 2px;\r\n    }\r\n`\r\n\r\nexport default Table","import { useState } from \"react\"\r\n\r\nconst useAudio = (url) => {\r\n    const [audio] = useState(new Audio(url))\r\n    const [playing, setPlaying] = useState(false)\r\n\r\n    const play = () => {\r\n        if (playing) {\r\n            audio.pause()\r\n            audio.play().finally(() => setPlaying(false))\r\n        }\r\n        else {\r\n            setPlaying(true)\r\n            audio.play().finally(() => setPlaying(false))\r\n        }\r\n    }\r\n\r\n    return [play]\r\n};\r\n\r\nexport default useAudio;","import React, { useState, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport useAudio from '../useAudio'\r\n\r\nconst ActionForm = ({ isTurn, toCall, minBet, balance, emitAction }) => {\r\n\r\n    const [raiseAmount, setRaiseAmount] = useState(Math.min(toCall, balance))\r\n    const [play] = useAudio('sounds/click.wav')\r\n\r\n    useEffect(() => {\r\n        setRaiseAmount(toCall)\r\n    }, [toCall, isTurn])\r\n\r\n    return (\r\n        <ActionFormContainer>\r\n            <h3>$</h3>\r\n            <RaiseSelect>\r\n                <RaiseAmount id='raise-amount'>{raiseAmount}</RaiseAmount>\r\n                <RaiseUpDown>\r\n                    <button id='raise-up-button' disabled={!isTurn || raiseAmount === balance} onClick={(e) => {\r\n                        e.preventDefault()\r\n                        if (raiseAmount === balance) return\r\n                        setRaiseAmount(Math.min(raiseAmount + minBet, balance))\r\n                        play()\r\n                    }}>▲</button>\r\n                    <button id='raise-down-button' disabled={!isTurn || raiseAmount <= toCall} onClick={(e) => {\r\n                        e.preventDefault()\r\n                        if (raiseAmount === balance) {\r\n                            if (balance <= toCall) return\r\n                            if ((raiseAmount - toCall) % minBet !== 0) {\r\n                                setRaiseAmount(raiseAmount - (raiseAmount % minBet))\r\n                                return\r\n                            }\r\n                        }\r\n                        setRaiseAmount(Math.max(toCall, raiseAmount - minBet))\r\n                        play()\r\n                    }}>▼</button>\r\n                </RaiseUpDown>\r\n            </RaiseSelect>\r\n            <ActionButton id='call-button' disabled={!isTurn} onClick={(e) => {\r\n                e.preventDefault()\r\n                emitAction(raiseAmount)\r\n            }}>{\r\n                    (raiseAmount === balance) ? <>All In</>\r\n                        : (raiseAmount === toCall) ?\r\n                            (toCall === 0) ? <>Check</>\r\n                                : <>Call</>\r\n                            : <>Raise</>\r\n                }</ActionButton>\r\n            <ActionButton id='fold-button' disabled={!isTurn} onClick={(e) => {\r\n                e.preventDefault()\r\n                emitAction(-1)\r\n            }}>Fold</ActionButton>\r\n        </ActionFormContainer>\r\n    )\r\n\r\n}\r\n\r\nconst ActionFormContainer = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr 2fr 2fr;\r\n    grid-column-gap: 8px;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h3 {\r\n        margin: 8px;\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst RaiseSelect = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 3fr 2fr;\r\n`\r\n\r\nconst RaiseAmount = styled.div`\r\n    align-self: flex-end;\r\n    font-size: 1.5em;\r\n    text-align: right;\r\n    width: 5em;\r\n    margin-right: 16px;\r\n    padding: 6px;\r\n    background: rgba(6, 35, 18, 0.6);\r\n    border-radius: 8px;\r\n`\r\n\r\nconst RaiseUpDown = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    button {\r\n        margin: 1px;\r\n        &:hover {\r\n            background-color: #1d391e;\r\n        }\r\n        &:disabled {\r\n            background-color: #49654a\r\n        }\r\n    }\r\n`\r\n\r\nconst ActionButton = styled.button`\r\n    margin: 1px;\r\n    align-self: stretch;\r\n    button {\r\n        &:hover {\r\n            background-color: #1d391e;\r\n        }\r\n        &:disabled {\r\n            background-color: #49654a\r\n        }\r\n    }\r\n`\r\n\r\nexport default ActionForm","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport ActionForm from './ActionForm'\r\n\r\nconst Footer = ({ myState, minBet, emitAction }) => {\r\n\r\n    return (\r\n        <PlayerContainerDiv>\r\n            <button onClick={(e) => {\r\n                e.preventDefault()\r\n            }}>◀&nbsp;&nbsp;&nbsp;Leave Room</button>\r\n            {\r\n                (myState) ?\r\n                    <ActionForm isTurn={myState.isTurn} toCall={myState.toCall} minBet={minBet} balance={myState.balance} emitAction={emitAction} />\r\n                    : <ActionForm isTurn={false} toCall={null} minBet={null} balance={null} />\r\n            }\r\n        </PlayerContainerDiv>\r\n    )\r\n\r\n}\r\n\r\nconst PlayerContainerDiv = styled.div`\r\n    display: flex;\r\n    margin: 12px 0px 0px 0px;\r\n    padding: 12px;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    border-radius: 4px;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    button {\r\n        font-size: medium;\r\n        font-weight: 600;\r\n        padding: 8px;\r\n        border-style: double;\r\n        border-radius: 4px;\r\n        border-color: rgba(233, 192, 154, 0.4);\r\n        background-color: #2d492e;\r\n        color: #d3c9b0;\r\n        &:hover {\r\n            background-color: #1d391e;\r\n        }\r\n        &:disabled {\r\n            background-color: #49654a\r\n        }\r\n    }\r\n`\r\n\r\nexport default Footer","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Animated } from 'react-animated-css'\r\n\r\nimport PlayerContainer from './PlayerContainer'\r\nimport Dealer from './Dealer'\r\nimport Table from './Table'\r\nimport Footer from './Footer'\r\n\r\nconst GameScreen = ({ guiState, myName, emitAction }) => {\r\n    console.log(guiState, myName)\r\n    let myState = guiState.playerStates.find(x => x.name === myName)\r\n    if (myState) myState.cardsUp = true\r\n\r\n    return (\r\n        <Animated animationIn='zoomIn' animationInDuration={550} isVisible={true}>\r\n            <GameContainer>\r\n                <PlayerRow>\r\n                    {/* Empty div for spacing */}\r\n                    <div></div>\r\n\r\n                    <PlayerContainer\r\n                        id='player-container-0'\r\n                        playerState={guiState.playerStates[0] ? guiState.playerStates[0] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-1'\r\n                        playerState={guiState.playerStates[1] ? guiState.playerStates[1] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-2'\r\n                        playerState={guiState.playerStates[2] ? guiState.playerStates[2] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-3'\r\n                        playerState={guiState.playerStates[3] ? guiState.playerStates[3] : null} />\r\n\r\n                    {/* Empty div for spacing */}\r\n                    <div></div>\r\n                </PlayerRow>\r\n                <DealerTableRow>\r\n                    <Dealer message={guiState.message} />\r\n                    <Table\r\n                        window={guiState.window}\r\n                        bets={guiState.playerStates.map(x => x.bet)}\r\n                        isTurn={guiState.playerStates.map(x => x.isTurn)} />\r\n\r\n                    {/* Empty div for spacing */}\r\n                    <div></div>\r\n                </DealerTableRow>\r\n                <PlayerRow>\r\n                    {/* Empty div for spacing */}\r\n                    <div></div>\r\n\r\n                    <PlayerContainer\r\n                        id='player-container-7'\r\n                        playerState={guiState.playerStates[7] ? guiState.playerStates[7] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-6'\r\n                        playerState={guiState.playerStates[6] ? guiState.playerStates[6] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-5'\r\n                        playerState={guiState.playerStates[5] ? guiState.playerStates[5] : null} />\r\n                    <PlayerContainer\r\n                        id='player-container-4'\r\n                        playerState={guiState.playerStates[4] ? guiState.playerStates[4] : null} />\r\n\r\n                    {/* Empty div for spacing */}\r\n                    <div></div>\r\n                </PlayerRow>\r\n                <Footer myState={myState} minBet={guiState.minBet} emitAction={emitAction} />\r\n            </GameContainer>\r\n        </Animated>\r\n    )\r\n}\r\n\r\nconst GameContainer = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 2fr 3fr 2fr 1fr;\r\n    height: 98.32vh;\r\n`\r\n\r\nconst PlayerRow = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 2fr 2fr 2fr 1fr;\r\n    column-gap           : 5%;\r\n`\r\n\r\nconst DealerTableRow = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 2fr 11fr 1fr;\r\n`\r\n\r\nexport default GameScreen","import React, { useState, useEffect } from 'react'\nimport socketIOClient from 'socket.io-client'\nimport './App.css'\nimport LoginScreen from './components/Lobby/LoginScreen'\nimport GameScreen from './components/Game/GameScreen'\n\nlet socket\n\n// React only re renders of state variables, i.e. React will not re render if these variables\n// change value. But, that's okay because these variables only ever update right before the players\n// state variable changes. So, these variables will update, then players will update, triggering a\n// re render with all three variables updated.\nlet hasJoined = false\nlet myName = null\n\nfunction App() {\n\n  const ENDPOINT = 'localhost:3001'\n\n  // Init state variables\n  const [players, setPlayers] = useState([])\n  const [isFirstPlayer, setIsFirstPlayer] = useState(false)\n  const [isPlay, setIsPlay] = useState(false)\n  const [guiState, setGuiState] = useState({\n    message: \"Welcome to Texas Hold'em!\",\n    window: [],\n    minBet: null,\n    playerStates: []\n  })\n\n  const emitJoin = (name, password) => {\n    socket.emit('c_join', { name, password })\n  }\n\n  const emitPlay = () => {\n    socket.emit('c_play', players)\n  }\n\n  const emitAction = (amount) => {\n    socket.emit('c_action', amount)\n  }\n\n  useEffect(() => {\n    socket = socketIOClient(ENDPOINT)\n\n    socket.on('s_players', (newPlayers) => {\n      console.log(`Received players update: ${newPlayers}`)\n      setPlayers(newPlayers.slice(0, 8))\n    })\n\n    socket.on('s_join_success', (isFirst, name) => {\n      console.log('Successfully joined room...')\n      if (isFirst) {\n        setIsFirstPlayer(true)\n        console.log('You are the first player...')\n      }\n      hasJoined = true\n      myName = name\n    })\n\n    socket.on('s_play', () => {\n      setIsPlay(true)\n    })\n\n    socket.on('s_gui_state', (newGuiState) => {\n      setGuiState(newGuiState)\n    })\n\n    return () => socket.disconnect();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {\n        !isPlay ?\n          < LoginScreen\n            players={players}\n            hasJoined={hasJoined}\n            isFirstPlayer={isFirstPlayer}\n            socketHandle={{ emitJoin, emitPlay }} />\n          : <GameScreen guiState={guiState} myName={myName} emitAction={emitAction} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}